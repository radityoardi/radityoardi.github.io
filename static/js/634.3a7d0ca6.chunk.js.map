{"version":3,"file":"static/js/634.3a7d0ca6.chunk.js","mappings":"gMAIaA,EAAiC,WAE7C,MAA0BC,EAAAA,SAAe,CAAEC,MAAO,KAAlD,eAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,EAAAA,SAAe,MAAzC,yBAeA,OAPAA,EAAAA,WAAgB,WACfI,MAAM,+CAAD,OAPYC,sBAOZ,sBARgBA,4CAQwEC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GACnIN,EAASM,GACTC,QAAQC,IAAIF,QAEX,KAGF,UAAC,WAAD,YACC,mCACA,yBAEEP,GAASA,EAAMD,OAASC,EAAMD,MAAMW,KAAI,SAACC,EAAWC,GAAZ,OACvC,UAAC,WAAD,YACC,wBAAmBD,EAAKE,OAAfF,EAAKG,KACd,yCAAiBH,EAAKI,OAAOC,YAA7B,OAA+C,IAAIC,KAAKN,EAAKO,WAAYC,mBACzE,SAAC,IAAD,WACC,iBAAMC,wBAAyB,CAACC,OAAQV,EAAKW,yBAUrD,a,iGCpCaC,GAA4CC,EAAAA,EAAAA,ICAT,SAAAC,GAE9C,GAAsB,MAAlBA,EAAMC,SACR,OAAO,KAGqED,EAAK,MAALA,EAAK,UAA3E,IAAkBE,EAAoDF,EAAK,GAArDG,OAAQ,IAAG,SAAMD,EAAsBE,GAASJ,EAAK,QAALA,EAAK,QAAV,QAAKA,EAAxE,gDAEAK,GAAQC,EAAAA,EAAAA,IAAiCN,EAAO,CACpDO,KAAMJ,IAGR,OAAOK,EAAAA,EAAAA,IAACH,EAAME,MAAIE,EAAAA,EAAAA,IAAAA,IAAKC,EAAAA,EAAAA,IAAeN,EAAMO,EAAAA,QDZqC,CACjFpB,YAAa,OACbqB,OELkD,SAACZ,EAAmBa,GAC9D,IAAAC,EAA0Cd,EAAK,GAA3Ce,EAAsCf,EAAK,UAAhCgB,EAA2BhB,EAAK,MAAzBiB,EAAoBjB,EAAK,OAAjBkB,EAAYlB,EAAK,QAC/CmB,EAA0BN,EAAK,MAAxBO,EAAmBP,EAAK,eACjCQ,EAAgBF,EAAMD,GAAW,UAEvC,MAAO,CACLX,KAAM,CACJc,EACA,CACEC,MAAOD,EAAcC,OAASF,EAAeG,SAC7CC,QAASR,EAAgB,OAAPF,EAAc,aAAe,QAAW,SAC1DW,oBAAqBJ,EAAcK,oBACnCC,oBAAqBN,EAAcO,qBAErCX,GAAU,CACRY,WAAY,SACZC,SAAU,SACVC,aAAc,YAEhBhB","sources":["components/Pages/Blogs.tsx","../node_modules/@fluentui/react/lib/components/src/components/Text/Text.ts","../node_modules/@fluentui/react/lib/components/src/components/Text/Text.view.tsx","../node_modules/@fluentui/react/lib/components/src/components/Text/Text.styles.ts"],"sourcesContent":["import React from 'react';\r\nimport * as Fluent from '@fluentui/react';\r\nimport * as Hooks from '@fluentui/react-hooks';\r\n\r\nexport const Blogs: React.FunctionComponent = () => {\r\n\r\n\tconst [posts, setPosts] = React.useState({ items: [] });\r\n\tconst [error, setError] = React.useState(null);\r\n\tconst bloggerAPIKey = process.env.REACT_APP_GOOGLEAPI_KEY;\r\n\tconst bloggerID = process.env.REACT_APP_MAINBLOGID;\r\n\r\n\t/*\r\n\tfetch(`https://www.googleapis.com/blogger/v3/blogs/${bloggerID}/posts?key=${bloggerAPIKey}`)\r\n\t.then(response => response.json()).then(data => setPosts(data), error => setError(error));\r\n\t*/\r\n\tReact.useEffect(() => {\r\n\t\tfetch(`https://www.googleapis.com/blogger/v3/blogs/${bloggerID}/posts?key=${bloggerAPIKey}`).then(response => response.json()).then(data => {\r\n\t\t\tsetPosts(data);\r\n\t\t\tconsole.log(data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h1>Blogs</h1>\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tposts && posts.items && posts.items.map((item: any, index: number) => (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<h2 key={item.id}>{item.title}</h2>\r\n\t\t\t\t\t\t\t<div>Written by {item.author.displayName} on {(new Date(item.published)).toDateString()}</div>\r\n\t\t\t\t\t\t\t<Fluent.Text>\r\n\t\t\t\t\t\t\t\t<span dangerouslySetInnerHTML={{__html: item.content}}></span>\r\n\t\t\t\t\t\t\t</Fluent.Text>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Blogs;","import * as React from 'react';\nimport { createComponent } from '@fluentui/foundation-legacy';\nimport { TextView } from './Text.view';\nimport { TextStyles as styles } from './Text.styles';\nimport type { ITextProps } from './Text.types';\n\nexport const Text: React.FunctionComponent<ITextProps> = createComponent(TextView, {\n  displayName: 'Text',\n  styles,\n});\n\nexport default Text;\n","/** @jsxRuntime classic */\n/** @jsx withSlots */\nimport { withSlots, getSlots } from '@fluentui/foundation-legacy';\nimport { getNativeProps, htmlElementProperties } from '../../Utilities';\nimport type { ITextComponent, ITextProps, ITextSlots } from './Text.types';\n\nexport const TextView: ITextComponent['view'] = props => {\n  // eslint-disable-next-line eqeqeq\n  if (props.children == null) {\n    return null;\n  }\n\n  const { block, className, as: RootType = 'span', variant, nowrap, ...rest } = props;\n\n  const Slots = getSlots<ITextProps, ITextSlots>(props, {\n    root: RootType,\n  });\n\n  return <Slots.root {...getNativeProps(rest, htmlElementProperties)} />;\n};\n","import type { ITextComponent, ITextStyles, ITextStylesReturnType, ITextProps } from './Text.types';\nimport type { ITheme } from '../../Styling';\n\nexport const TextStyles: ITextComponent['styles'] = (props: ITextProps, theme: ITheme): ITextStylesReturnType => {\n  const { as, className, block, nowrap, variant } = props;\n  const { fonts, semanticColors } = theme;\n  const variantObject = fonts[variant || 'medium'];\n\n  return {\n    root: [\n      variantObject,\n      {\n        color: variantObject.color || semanticColors.bodyText,\n        display: block ? (as === 'td' ? 'table-cell' : 'block') : 'inline',\n        mozOsxFontSmoothing: variantObject.MozOsxFontSmoothing,\n        webkitFontSmoothing: variantObject.WebkitFontSmoothing,\n      },\n      nowrap && {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      },\n      className,\n    ],\n  } as ITextStyles;\n};\n"],"names":["Blogs","React","items","posts","setPosts","fetch","process","then","response","json","data","console","log","map","item","index","title","id","author","displayName","Date","published","toDateString","dangerouslySetInnerHTML","__html","content","Text","createComponent","props","children","_a","RootType","rest","Slots","getSlots","root","withSlots","__assign","getNativeProps","htmlElementProperties","styles","theme","as","className","block","nowrap","variant","fonts","semanticColors","variantObject","color","bodyText","display","mozOsxFontSmoothing","MozOsxFontSmoothing","webkitFontSmoothing","WebkitFontSmoothing","whiteSpace","overflow","textOverflow"],"sourceRoot":""}