{"version":3,"file":"static/js/173.8ac51013.chunk.js","mappings":"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","sources":["../node_modules/@fluentui/react/lib/components/src/components/Link/useLink.ts","../node_modules/@fluentui/react/lib/components/src/components/Link/Link.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Link/Link.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Link/Link.tsx","components/Home/Default.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport { classNamesFunction, useFocusRects } from '@fluentui/utilities';\nimport type { ILink, ILinkProps, ILinkStyleProps, ILinkStyles } from './Link.types';\n\nconst getClassNames = classNamesFunction<ILinkStyleProps, ILinkStyles>();\n\n/**\n * The useLink hook processes the Link component props and returns\n * state, slots and slotProps for consumption by the component.\n */\nexport const useLink = (props: ILinkProps, forwardedRef: React.Ref<HTMLElement>): any => {\n  const { as, className, disabled, href, onClick, styles, theme, underline } = props;\n  const rootRef = React.useRef<HTMLDivElement | null>(null);\n  const mergedRootRefs: React.Ref<HTMLElement> = useMergedRefs(rootRef, forwardedRef);\n\n  useComponentRef(props, rootRef);\n  useFocusRects(rootRef);\n\n  const classNames = getClassNames(styles!, {\n    className,\n    isButton: !href,\n    isDisabled: disabled,\n    isUnderlined: underline,\n    theme: theme!,\n  });\n\n  const _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    if (disabled) {\n      ev.preventDefault();\n    } else if (onClick) {\n      onClick(ev);\n    }\n  };\n\n  const rootType = as ? as : href ? 'a' : 'button';\n\n  const state = {};\n  const slots = { root: rootType };\n  const slotProps = {\n    root: {\n      ...adjustPropsForRootType(rootType, props),\n      'aria-disabled': disabled,\n      className: classNames.root,\n      onClick: _onClick,\n      ref: mergedRootRefs,\n    },\n  };\n\n  return { state, slots, slotProps };\n};\n\nconst useComponentRef = (props: ILinkProps, link: React.RefObject<ILink>) => {\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      focus() {\n        if (link.current) {\n          link.current.focus();\n        }\n      },\n    }),\n    [link],\n  );\n};\n\nconst adjustPropsForRootType = (\n  RootType: string | React.ComponentClass | React.FunctionComponent,\n  props: ILinkProps & { getStyles?: any },\n): Partial<ILinkProps> => {\n  // Deconstruct the props so we remove props like `as`, `theme` and `styles`\n  // as those will always be removed. We also take some props that are optional\n  // based on the RootType.\n  const { as, disabled, target, href, theme, getStyles, styles, componentRef, underline, ...restProps } = props;\n\n  // RootType will be a string if we're dealing with an html component\n  if (typeof RootType === 'string') {\n    // Remove the disabled prop for anchor elements\n    if (RootType === 'a') {\n      return {\n        target,\n        href: disabled ? undefined : href,\n        ...restProps,\n      };\n    }\n\n    // Add the type='button' prop for button elements\n    if (RootType === 'button') {\n      return {\n        type: 'button',\n        disabled,\n        ...restProps,\n      };\n    }\n\n    // Remove the target and href props for all other non anchor elements\n    return { ...restProps, disabled };\n  }\n\n  // Retain all props except 'as' for ReactComponents\n  return { target, href, disabled, ...restProps };\n};\n","import * as React from 'react';\nimport { useLink } from './useLink';\nimport type { ILinkProps } from './Link.types';\n\nexport const LinkBase: React.FunctionComponent<ILinkProps> = React.forwardRef<HTMLElement, ILinkProps>((props, ref) => {\n  const { slots, slotProps } = useLink(props, ref);\n\n  return <slots.root {...slotProps.root} />;\n});\n\nLinkBase.displayName = 'LinkBase';\n","import { getGlobalClassNames, HighContrastSelector } from '@fluentui/style-utilities';\nimport type { ILinkStyleProps, ILinkStyles } from './Link.types';\n\nexport const GlobalClassNames = {\n  root: 'ms-Link',\n};\n\nexport const getStyles = (props: ILinkStyleProps): ILinkStyles => {\n  const { className, isButton, isDisabled, isUnderlined, theme } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const linkColor = semanticColors.link;\n  const linkInteractedColor = semanticColors.linkHovered;\n  const linkDisabledColor = semanticColors.disabledText;\n  const focusBorderColor = semanticColors.focusBorder;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: linkColor,\n        outline: 'none',\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        textDecoration: isUnderlined ? 'underline' : 'none',\n\n        selectors: {\n          '.ms-Fabric--isFocusVisible &:focus': {\n            // Can't use getFocusStyle because it doesn't support wrapping links\n            // https://github.com/microsoft/fluentui/issues/4883#issuecomment-406743543\n            // Using box-shadow and outline allows the focus rect to wrap links that span multiple lines\n            // and helps the focus rect avoid getting clipped.\n            boxShadow: `0 0 0 1px ${focusBorderColor} inset`,\n            outline: `1px auto ${focusBorderColor}`,\n            selectors: {\n              [HighContrastSelector]: {\n                outline: '1px solid WindowText',\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            // For IE high contrast mode\n            borderBottom: 'none',\n          },\n        },\n      },\n      isButton && {\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        display: 'inline',\n        margin: 0,\n        overflow: 'inherit',\n        padding: 0,\n        textAlign: 'left',\n        textOverflow: 'inherit',\n        userSelect: 'text',\n        borderBottom: '1px solid transparent', // For Firefox high contrast mode\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'LinkText',\n            forcedColorAdjust: 'none',\n          },\n        },\n      },\n      !isButton && {\n        selectors: {\n          [HighContrastSelector]: {\n            // This is mainly for MessageBar, which sets MsHighContrastAdjust: none by default\n            MsHighContrastAdjust: 'auto',\n            forcedColorAdjust: 'auto',\n          },\n        },\n      },\n\n      isDisabled && [\n        'is-disabled',\n        {\n          color: linkDisabledColor,\n          cursor: 'default',\n        },\n        {\n          selectors: {\n            '&:link, &:visited': {\n              pointerEvents: 'none',\n            },\n          },\n        },\n      ],\n      !isDisabled && {\n        selectors: {\n          '&:active, &:hover, &:active:hover': {\n            color: linkInteractedColor,\n            textDecoration: 'underline',\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'LinkText',\n              },\n            },\n          },\n          '&:focus': {\n            color: linkColor,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'LinkText',\n              },\n            },\n          },\n        },\n      },\n      classNames.root,\n      className,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '@fluentui/utilities';\nimport { LinkBase } from './Link.base';\nimport { getStyles } from './Link.styles';\nimport type { ILinkProps, ILinkStyleProps, ILinkStyles } from './Link.types';\n\nexport const Link: React.FunctionComponent<ILinkProps> = styled<ILinkProps, ILinkStyleProps, ILinkStyles>(\n  LinkBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Link',\n  },\n);\n","import React, { CSSProperties } from 'react';\r\nimport * as Fluent from '@fluentui/react';\r\nimport * as Hooks from '@fluentui/react-hooks';\r\nimport moment, { Moment } from 'moment';\r\n\r\nconst textStyle:CSSProperties = {\r\n\tfontWeight: 'bolder',\r\n\tfontSize: '18px',\r\n\tletterSpacing: '2px',\r\n\tlineHeight: 1.3\r\n};\r\nconst myPhoto: CSSProperties = {\r\n\tfloat: 'right',\r\n\theight: '100px'\r\n};\r\n\r\nexport const Default:React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<img src='ToonRadityoCircle.png' style={myPhoto} />\r\n\t\t\t<h1>Hello, World!</h1>\r\n\t\t\t<p style={textStyle}>\r\n\t\t\t\tThis is not your typical default \"Hello, World!\" application.\r\n\t\t\t</p>\r\n\t\t\t<p style={textStyle}>\r\n\t\t\t\tI'm Radityo. I'm a technical consultant focusing on the application development world, currently living in the bustling city of Singapore, the city that never sleeps (literally).\r\n\t\t\t\tI've been getting my hands dirty on mostly Microsoft technology such as C#, SharePoint (not long after it was born), PowerShell hardcore, and now toying with Office 365, Power Apps &amp; Automate, and lastly sharpening my skills on TypeScript and React.\r\n\t\t\t\t<br/>\r\n\t\t\t\tThough Machine Learning and AI are not really my main skills, but I'm leaning towards that.\r\n\t\t\t</p>\r\n\t\t\t<p style={textStyle}>\r\n\t\t\t\tIn my free time, I love to cook (though I know I'm a terrible chef), love to \"fish\" sunbirds and yellow-vented bulbul to come to my corridor in a bid to grab their pics, and of course...eat.\r\n\t\t\t</p>\r\n\t\t\t<p style={textStyle}>\r\n\t\t\tThis site got some tools I've written (click that top-right icon), it might be worth sharing. I used to <Fluent.Link href=\"https://otak-otak-it.blogspot.com\">blog</Fluent.Link> but I'm falling away from it.\r\n\t\t\t</p>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Default;"],"names":["getClassNames","classNamesFunction","useComponentRef","props","link","React","componentRef","focus","current","adjustPropsForRootType","RootType","disabled","target","href","restProps","undefined","type","LinkBase","ref","forwardedRef","as","className","onClick","styles","theme","underline","rootRef","mergedRootRefs","useMergedRefs","useFocusRects","classNames","isButton","isDisabled","isUnderlined","rootType","state","slots","root","slotProps","ev","preventDefault","useLink","__assign","displayName","GlobalClassNames","Link","styled","semanticColors","linkColor","linkInteractedColor","linkHovered","linkDisabledColor","disabledText","focusBorderColor","focusBorder","getGlobalClassNames","fonts","medium","color","outline","fontSize","fontWeight","textDecoration","selectors","boxShadow","_b","HighContrastSelector","_a","borderBottom","background","backgroundColor","border","cursor","display","margin","overflow","padding","textAlign","textOverflow","userSelect","_c","forcedColorAdjust","_d","MsHighContrastAdjust","pointerEvents","_e","_f","scope","textStyle","letterSpacing","lineHeight","myPhoto","float","height","Default","src","style"],"sourceRoot":""}